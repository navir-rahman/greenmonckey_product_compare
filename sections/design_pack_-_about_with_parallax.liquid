{%- comment -%}
{
  "pack_name": "About - parallax",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{% comment %} Color: check for gradient picker {% endcomment %}
{%- capture background_color -%}
  {%- if section.settings.background_color contains 'gradient' -%}
    {{ section.settings.background_color }}
  {%- else -%}
    {% unless section.settings.background_color contains 'rgba' %}
      {{ section.settings.background_color | color_modify: 'alpha', 0.4 }}
    {% endunless %}
  {%- endif -%}
{%- endcapture -%}

{%- comment -%} Images: all placeholders {%- endcomment -%}
{%- assign placeholder_image_id = 'mU88MlEFcoU' -%}
{%- assign background_placeholder_image_id = '1nDW7BjBj1s' -%}

{%- comment -%} Images: check image crop aspect ratio {%- endcomment -%}
{%- if section.settings.image_crop == 'none' -%}
  {%- assign image_crop_width = section.settings.image.width | default: '1000' -%}
  {%- assign image_crop_height = section.settings.image.height | default: '1200' -%}
{%- else -%}
  {%- assign image_crop_width = section.settings.image_crop | split: ':' | first | times: 1000 -%}
  {%- assign image_crop_height = section.settings.image_crop | split: ':' | last | times: 1000 -%}
{%- endif -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

{%- assign fancy_font_url = 'https://cdn.shopify.com/s/files/1/0425/4928/0931/files/Malina1.woff?v=1615829908' -%}
{%- assign fancy_font = 'Malina1' -%}
@font-face {
  font-family: {{ fancy_font }};
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local({{ fancy_font }}), local({{ fancy_font }}),
      url({{ fancy_font_url }}) format('woff');
}

#DP--{{ section.id }} {
  position: relative;
  background: {{ background_color }};
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__background::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: 1;
  background: {{ background_color }};
}

#DP--{{ section.id }} .dsgn-pck__background {
  position: relative;
  z-index: 2;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  position: relative;
  z-index: 1;
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__grid {
  grid-template-columns: 1fr 1fr 5% 1fr 1fr;
}

#DP--{{ section.id }} .dsgn-pck__image {
  grid-column: 1 / span 3;
  grid-row: 1 / span 3;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper img {
  object-position: {{ section.settings.focal_point }};
}

#DP--{{ section.id }} .dsgn-pck__content {
  grid-column: 3 / 6;
  grid-row: 2;
  z-index: 2;
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
  color: {{ section.settings.text_color }};
}

#DP--{{ section.id }} .dsgn-pck__inner-content {
  text-align: left;
}

#DP--{{ section.id }} .dsgn-pck__intro-text {
  transform: rotate(0deg) translateX(-20px) translateY(20px);
  transform-origin: left;
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-small-heading-size, var(--dp-small-heading-size, 24px)) * {{ section.settings.text_size | times: 0.01 }});
  margin-bottom: 0;
  color: {{ section.settings.text_color }};
  font-family: {{ fancy_font }}, fantasy;
}

#DP--{{ section.id }} .dsgn-pck__heading {
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
  margin-bottom: 0;
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--heading-font);
  font-weight: var(--heading-font-weight);
  font-style: var(--heading-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__text {
  margin-left: clamp(20px, 5em, 100px);
  width: fit-content;
}

#DP--{{ section.id }} .dsgn-pck__text p {
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  color: {{ section.settings.text_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__intro-text + .dsgn-pck__heading {
  margin-top: calc({{ section.settings.text_size }}px * 0.15);
}

#DP--{{ section.id }} .dsgn-pck__heading + .dsgn-pck__text,
#DP--{{ section.id }} .dsgn-pck__heading + .dsgn-pck__button {
  margin-top: calc({{ section.settings.text_size }}px * 0.15);
}

#DP--{{ section.id }} .dsgn-pck__text + .dsgn-pck__button {
  margin-top: calc({{ section.settings.text_size }}px * 0.2);
}

#DP--{{ section.id }} em {
  display: inline-block;
  position: relative;
}

#DP--{{ section.id }} em:before {
  content: '';
  display: block;
  position: absolute;
  width: 105%;
  height: 80%;
  top: 20%;
  bottom: 0;
  right: 0;
  left: -2.5%;
  z-index: -1;
  transform: skewX(-10deg);
  background: {{ section.settings.text_highlight_color }};
}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
  #DP--{{ section.id }} .dsgn-pck__image {
    grid-column: 1 / 6;
    grid-row: 1 / 1;
  }

  #DP--{{ section.id }} .dsgn-pck__content {
    grid-column: 1 / 6;
    grid-row: auto;
  }

  #DP--{{ section.id }} .dsgn-pck__intro-text {
    transform: rotate(0deg) translateX(0px) translateY(20px);
  }

  #DP--{{ section.id }} .dsgn-pck__text {
    margin-left: 0;
    width: 100%;
  }
}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__about-with-parallax dsgn-pck__section">
  <div class="dsgn-pck__background dsgn-pck__parallax">
    {%- if section.settings.show_background_image -%}
      {%- if section.settings.background_image != blank -%}
        {{ section.settings.background_image | image_url: width: 5000 | image_tag: loading: 'lazy', class: 'dsgn-pck__parallax-img', widths: widths, sizes: '100vw' }}
      {%- else -%}
        <img src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/{{ background_placeholder_image_id }}.jpg"
            class="dsgn-pck__parallax-img"
            alt=""
            loading="lazy"
            width="1600"
            height="1000">
      {%- endif -%}
    {%- endif -%}
    <div class="dsgn-pck__sizer
                dsgn-pck__grid">
      <div class="dsgn-pck__image" style="--dsgn-pck-animate: 0;">
        <div class="dsgn-pck__image__wrapper">
          <svg class="dsgn-pck__svg-sizer" viewBox="0 0 {{ image_crop_width }} {{ image_crop_height }}"></svg>
          {%- if section.settings.image != blank -%}
            {%- capture sizes -%}
              (max-width: 480px) {{ section.settings.base_width | at_least: 70 | append: 'vw' | default: '100vw'}},(max-width: 767px) {{ section.settings.base_width | append: 'vw' | default: '100vw' }},{{ section.settings.base_width | divided_by: 2.0 | round | append: 'vw' | default: '50vw' }}
            {%- endcapture -%}
            {{ section.settings.image | image_url: width: 2800 | image_tag: loading: 'lazy', widths: widths, sizes: sizes }}
          {%- else -%}
            <img src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/{{ placeholder_image_id }}_1000x.jpg"
                alt=""
                loading="lazy"
                width="1000"
                height="1000">
          {%- endif -%}
        </div>
      </div>
      <div class="dsgn-pck__content dsgn-pck__flex">
        <div class="dsgn-pck__inner-content">
          {%- if section.settings.fancy_text != blank -%}
            <div class="dsgn-pck__intro-text" style="--dsgn-pck-animate: 1;">{{ section.settings.fancy_text }}</div>
          {%- endif -%}
          {%- if section.settings.title != blank -%}
            {%- assign heading = section.settings.title | replace_first: '~', '<em>' | replace: '~', '</em>' -%}
            <h2 class="dsgn-pck__heading" style="--dsgn-pck-animate: 2;">
              {{ heading }}
            </h2>
          {%- endif -%}
          {%- if section.settings.text != blank -%}
            <div class="dsgn-pck__text dsgn-pck__rte" style="--dsgn-pck-animate: 3;">
              {{ section.settings.text }}
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "About - parallax",
  "class": "DP__about-parallax",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "select",
      "id": "image_crop",
      "label": "Image aspect ratio",
      "default": "1:1",
      "options": [
        {
          "value": "4:3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "2:3",
          "label": "Portrait (2:3)"
        },
        {
          "value": "1:1",
          "label": "Square (1:1)"
        },
        {
          "value": "none",
          "label": "Original"
        }
      ]
    },
    {
      "type": "select",
      "id": "focal_point",
      "label": "Image focal point",
      "info": "Used to keep the subject of your photo in view.",
      "default": "center center",
      "options": [
        {
          "value": "20% 0",
          "label": "Top left"
        },
        {
          "value": "top center",
          "label": "Top center"
        },
        {
          "value": "80% 0",
          "label": "Top right"
        },
        {
          "value": "20% 50%",
          "label": "Left"
        },
        {
          "value": "center center",
          "label": "Center"
        },
        {
          "value": "80% 50%",
          "label": "Right"
        },
        {
          "value": "20% 100%",
          "label": "Bottom left"
        },
        {
          "value": "bottom center",
          "label": "Bottom center"
        },
        {
          "value": "80% 100%",
          "label": "Bottom right"
        }
      ]
    },
    {
      "type": "text",
      "id": "fancy_text",
      "label": "Fancy text",
      "default": "Are you ready?"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Dare to ~lead.~"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text",
      "default": "<p>You are unique and so is your business. Make sure that you are <em>reflecting</em> your personality.</p>"
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 120,
      "unit": "%"
    },
    {
      "type": "header",
      "content": "🎨 Design"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#283144"
    },
    {
      "type": "color",
      "id": "text_highlight_color",
      "label": "Text highlight",
      "default": "#E9E9E9"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background"
    },
    {
      "type": "checkbox",
      "id": "show_background_image",
      "label": "Show background image",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background image"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "default": "none",
      "options": [
        {
          "value": "fade-in",
          "label": "Fade-in"
        },
        {
          "value": "fade-in-left",
          "label": "Fade-in left"
        },
        {
          "value": "fade-in-right",
          "label": "Fade-in right"
        },
        {
          "value": "fade-in-up",
          "label": "Fade-in up"
        },
        {
          "value": "fade-in-down",
          "label": "Fade-in down"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 60,
      "max": 90,
      "step": 5,
      "default": 80,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint. Prevents inner content from moving too far to the edge on large screens."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 60,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    }
  ],
  "presets": [
    {
      "name": "About - parallax 🎒",
      "settings": {
      }
    }
  ]
}
{% endschema %}

{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/jarallax.min.js?v=1638490357" defer></script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    enableParallax: function(section){
      const image = section.querySelector(`.dsgn-pck__parallax-img`);
      jarallax(section, {
        speed: 0.2,
        imgElement: image
      });
    },
    disableParallax: function(section){
      jarallax(section, 'destroy');

    },
    load: function(section){

      this.enableParallax(section);

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      this.disableParallax(section);
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
