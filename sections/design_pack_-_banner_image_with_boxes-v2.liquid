{%- comment -%}
{
  "pack_name": "Banner image - boxy v2",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{%- comment -%} Color: check if color is set to transparent {%- endcomment -%}
{%- assign background_alpha = section.settings.background_color | color_extract: 'alpha' -%}

{%- comment -%} Images: all placeholders {%- endcomment -%}
{%- assign placeholder_image_id = '7cERndkOyDw' -%}

{%- comment -%} Images: check image crop aspect ratio {%- endcomment -%}
{%- if section.settings.image_crop == 'none' -%}
  {%- assign image_crop_width = section.settings.background_image.width | default: '1600' -%}
  {%- assign image_crop_height = section.settings.background_image.height | default: '900' -%}
{%- else -%}
  {%- assign image_crop_width = section.settings.image_crop | split: ':' | first | times: 1000 -%}
  {%- assign image_crop_height = section.settings.image_crop | split: ':' | last | times: 1000 -%}
{%- endif -%}

{%- assign mobile_image_crop_width = section.settings.mobile_background_image.width | default: image_crop_width -%}
{%- assign mobile_image_crop_height = section.settings.mobile_background_image.height | default: image_crop_height -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: check text position {%- endcomment -%}
{%- assign horizontal_text_position = section.settings.text_position | split: ' ' | first -%}
{%- assign vertical_text_position = section.settings.text_position | split: ' ' | last -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

#DP--{{ section.id }} {
  display: grid;
  grid-template-columns: 1fr 10fr;
  background: {{ section.settings.background_color }};
  margin-top: {{ section.settings.outer_margin_top }}px;
  margin-bottom: {{ section.settings.outer_margin_bottom }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  width: 90%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__background {
  position: relative;
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__background::after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: {{ section.settings.image_overlay_color }};
}

#DP--{{ section.id }} .dsgn-pck__section-sidebar {
  display: flex;
  justify-content: center;
  align-items: flex-end;
  padding-bottom: 30px;
  grid-row: auto / span 2;
  background: {{ section.settings.box_color_1 }};
}

#DP--{{ section.id }} .dsgn-pck__box-1 {
  height: 50px;
  background: {{ section.settings.box_color_1 }};
}

#DP--{{ section.id }} .dsgn-pck__box-2 {
  height: 50px;
  background-image: linear-gradient(
    to right, {{ section.settings.box_color_1 }},
    {{ section.settings.box_color_1 }} 6%,
    {{ section.settings.box_color_2 }} 6%,
    {{ section.settings.box_color_2 }} 55%);
}

#DP--{{ section.id }} .dsgn-pck__box-3 {
  height: 30px;
  background: {{ section.settings.background_color }};
}

#DP--{{ section.id }} .dsgn-pck__box-4 {
  height: 30px;
  background-image: linear-gradient(
    to right, {% if background_alpha != 0 %}{{ section.settings.background_color }}{% endif %},
    {% if background_alpha != 0 %}{{ section.settings.background_color }}{% endif %} 6%,
    {{ section.settings.box_color_2 }} 6%,
    {{ section.settings.box_color_2 }} 55% );
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper img {
  object-position: {{ section.settings.focal_point }};
}

#DP--{{ section.id }} .dsgn-pck__grid {
  height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__content {
  z-index: 2;
  height: 100%;
  grid-template-columns: 1fr;
  grid-area: 1 / 1 / 2 / 2;
  padding: 10%;
}

#DP--{{ section.id }} .dsgn-pck__block + .dsgn-pck__block {
  margin-top: calc(10px * {{ section.settings.text_size | times: 0.008 }});
}

#DP--{{ section.id }} .dsgn-pck__block--heading + .dsgn-pck__block {
  margin-top: calc(20px * {{ section.settings.text_size | times: 0.008 }});
}

#DP--{{ section.id }} .dsgn-pck__block + .dsgn-pck__block--buttons {
  margin-top: calc(20px * {{ section.settings.text_size | times: 0.008 }});
}

#DP--{{ section.id }} .dsgn-pck__height--none .dsgn-pck__svg-image-sizer {
  width: 100%;
  grid-template-columns: 1fr;
  grid-area: 1 / 1 / 2 / 2;
}

#DP--{{ section.id }} .dsgn-pck__inner-content {
  z-index: 2;
  max-width: {{ section.settings.text_width }}px;
  width: 100%;
  padding: {%- if section.settings.text_background_color != blank -%}clamp(10px, 5%, 40px){%- endif -%};
  background: {{ section.settings.text_background_color }};
}

#DP--{{ section.id }} .dsgn-pck__small-text p {
  line-height: calc(3px + 2ex + 3px);
  color: {{ section.settings.text_color }};
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.008 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__heading {
  margin: 0;
  line-height: calc(3px + 2ex + 3px);
  color: {{ section.settings.text_color }};
  font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 45px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--heading-font);
  font-weight: var(--heading-font-weight);
  font-style: var(--heading-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__text p {
  line-height: calc(3px + 2ex + 3px);
  color: {{ section.settings.text_color }};
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__text-alignment-left .dsgn-pck__button-area {
  margin-right: auto;
  margin-left: 0;
}

#DP--{{ section.id }} .dsgn-pck__text-alignment-right .dsgn-pck__button-area {
  margin-left: auto;
  margin-right: 0;
}

#DP--{{ section.id }} .dsgn-pck__text-alignment-center .dsgn-pck__button-area {
  margin-left: auto;
  margin-right: auto;
}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin_top | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin_bottom | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__inner-content {
    min-width: 100%;
  }

  #DP--{{ section.id }} div.dsgn-pck__button-area {
    grid-template-columns: 1fr;
    width: 100%;
    gap: 10px;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__banner-image-with-boxes dsgn-pck__section">
  <div class="dsgn-pck__section-sidebar"></div>
  <div class="dsgn-pck__background">
    {%- if section.settings.link != blank -%}
      <a class="dsgn-pck__absolute-link" href="{{ section.settings.link }}">{{ section.settings.link.title }}</a>
    {% endif %}
    <div class="dsgn-pck__image__wrapper">
      <svg class="dsgn-pck__mobile--hidden" viewBox="0 0 {{ image_crop_width }} {{ image_crop_height }}"></svg>
      <svg class="dsgn-pck__mobile--visible dsgn-pck__desktop--hidden" viewBox="0 0 {{ mobile_image_crop_width }} {{ mobile_image_crop_height }}"></svg>
      {%- if section.settings.background_image != blank -%}
        <picture>
          {%- if section.settings.mobile_background_image != blank -%}
            <source media="(max-width: 480px)" srcset="{{ section.settings.mobile_background_image | image_url: width: 960 }}">
          {%- endif -%}
            {{ section.settings.background_image | image_url: width: 5000 | image_tag: loading: 'lazy', widths: widths, sizes: '100vw' }}
        </picture>
      {%- else -%}
        <img
          src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/{{ placeholder_image_id }}_1600x.jpg"
          alt=""
          height="1000"
          width="1600"
          loading="lazy"
        >
      {%- endif -%}
      <div class="dsgn-pck__sizer dsgn-pck__grid">
        <div class="dsgn-pck__content
                    dsgn-pck__flex dsgn-pck__justify-{{ horizontal_text_position }}
                    dsgn-pck__align-{{ vertical_text_position }}
                    dsgn-pck__text-alignment-{{ section.settings.text_alignment }}">
          {%- if section.settings.link != blank -%}
            <a class="dsgn-pck__absolute-link" href="{{ section.settings.link }}">{{ section.settings.background_image.alt }}</a>
          {% endif %}
          <div class="dsgn-pck__inner-content dsgn-pck__relative">
            {%- for block in section.blocks -%}
              <div id="DP--{{ block.id }}" class="dsgn-pck__block dsgn-pck__block--{{ block.type }}" {{ block.shopify_attributes }} style="--dsgn-pck-animate: {{ forloop.index }};">
                {%- case block.type -%}
                  {%- when 'divider' -%}
                    <style>
                      #DP--{{ block.id }} {
                        padding-top: {{ block.settings.padding_top }}px;
                        padding-bottom: {{ block.settings.padding_bottom }}px;
                      }

                      #DP--{{ block.id }} .dsgn-pck__divider {
                        height: 0;
                        border: none;
                        background: transparent;
                        {%- if block.settings.alignment == 'left' -%}
                          margin: 0;
                        {%- else -%}
                          margin: 0 auto;
                        {%- endif -%}
                        width: {{ block.settings.base_width }}%;
                        border-top: {{ block.settings.thickness }}px {{ block.settings.style }} {{ block.settings.divider_color }};
                      }
                    </style>
                    <hr class="dsgn-pck__divider" aria-hidden="true">
                  {%- when 'small_text' -%}
                    {%- if block.settings.title != blank -%}
                      <div class="dsgn-pck__small-text dsgn-pck__rte" style="--dsgn-pck-animate: {{ forloop.index }};">
                        {{ block.settings.title }}
                      </div>
                    {%- endif -%}
                  {%- when 'heading' -%}
                    {%- if block.settings.title != blank -%}
                      <h2 class="dsgn-pck__heading">
                        {{ block.settings.title | newline_to_br }}
                      </h2>
                    {%- endif -%}
                  {%- when 'text' -%}
                    {%- if block.settings.text != blank -%}
                      <div class="dsgn-pck__text dsgn-pck__rte">
                        {{ block.settings.text }}
                      </div>
                    {%- endif -%}
                  {%- when 'buttons' -%}
                    <style>
                      {%- assign button_alpha_primary = block.settings.button_background_color_primary | color_extract: 'alpha' -%}
                      {%- assign button_alpha_secondary = block.settings.button_background_color_secondary | color_extract: 'alpha' -%}

                      #DP--{{ section.id }} .dsgn-pck__button-area {
                        display: grid;
                        grid-gap: 32px;
                        {%- if block.settings.button_label_primary != blank and block.settings.button_label_secondary != blank -%}
                          grid-template-columns: repeat(2, 1fr);
                        {%- else -%}
                          grid-template-columns: 1fr;
                          max-width: 200px;
                        {%- endif -%}
                        max-width: 100%;
                        width: fit-content;
                      }

                      #DP--{{ section.id }} .dsgn-pck__button {
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        text-align: center;
                        text-decoration: none;
                        padding: 0.5em 1.2em;
                        border: thin solid;
                        transition: all 0.3s ease-in-out;
                        border-radius: {{ block.settings.button_radius }}px;
                        line-height: calc(3px + 2ex + 3px);
                        font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                        {%- if section.settings.override_theme_font != blank -%}
                        font-family: var(--main-font);
                        font-weight: var(--main-font-weight);
                        font-style: var(--main-font-style);
                        {%- endif -%}
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-primary {
                        color: {{ block.settings.button_label_color_primary }};
                        border-color: {%- if button_alpha_primary != 0 -%}{{ block.settings.button_background_color_primary }}{%- else -%}{{ block.settings.button_label_color_primary }}{%- endif -%};
                        background-color: {{ block.settings.button_background_color_primary }};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-secondary {
                        color: {{ block.settings.button_label_color_secondary }};
                        border-color: {%- if button_alpha_secondary != 0 -%}{{ block.settings.button_background_color_secondary }}{%- else -%}{{ block.settings.button_label_color_secondary }}{%- endif -%};
                        background-color: {{ block.settings.button_background_color_secondary }};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-primary:hover {
                        opacity: 1;
                        {%- if button_alpha_primary != 0 -%}
                        background-color: {{ block.settings.button_background_color_primary | color_darken: 10 }};
                        border-color: transparent;
                        {%- else -%}
                        background-color: {{ block.settings.button_label_color_primary | color_modify: 'alpha', 0.1 }}
                        {%- endif -%};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-secondary:hover {
                        opacity: 1;
                        {%- if button_alpha_secondary != 0 -%}
                        background-color: {{ block.settings.button_background_color_secondary | color_darken: 10 }};
                        border-color: transparent;
                        {%- else -%}
                        background-color: {{ block.settings.button_label_color_secondary | color_modify: 'alpha', 0.1 }}
                        {%- endif -%};
                      }
                    </style>
                    <div class="dsgn-pck__button-area">
                      {%- if block.settings.button_label_primary != blank -%}
                        <a class="dsgn-pck__button dsgn-pck__button-primary" {%- if block.settings.link_primary != blank -%} href="{{ block.settings.link_primary }}" {%- endif -%}>{{ block.settings.button_label_primary }}</a>
                      {%- endif -%}
                      {%- if block.settings.button_label_secondary != blank -%}
                        <a class="dsgn-pck__button dsgn-pck__button-secondary" {%- if block.settings.link_secondary != blank -%}href="{{ block.settings.link_secondary }}"{%- endif -%}>{{ block.settings.button_label_secondary }}</a>
                      {%- endif -%}
                    </div>
                {%- endcase -%}
              </div>
            {%- endfor -%}
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="dsgn-pck__grid-spacer"></div>
  <div class="dsgn-pck__box-1"></div>
  <div class="dsgn-pck__box-2"></div>
  <div class="dsgn-pck__box-3"></div>
  <div class="dsgn-pck__box-4"></div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Banner image - boxy",
  "class": "DP__banner-image-boxy-v2",
  "settings": [
    {
      "type": "url",
      "id": "link",
      "label": "Link",
      "info": "Links entire banner image."
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Image"
    },
    {
      "type": "select",
      "id": "image_crop",
      "label": "Image height",
      "default": "1200:600",
      "options": [
        {
          "label": "Original",
          "value": "none"
        },
        {
          "label": "Extra small",
          "value": "1200:200"
        },
        {
          "label": "Small",
          "value": "1200:400"
        },
        {
          "label": "Medium",
          "value": "1200:600"
        },
        {
          "label": "Large",
          "value": "1200:800"
        },
        {
          "label": "Extra large",
          "value": "1200:1000"
        }
      ]
    },
    {
      "type": "select",
      "id": "focal_point",
      "label": "Image focal point",
      "info": "Used to keep the subject of your photo in view.",
      "default": "center center",
      "options": [
        {
          "value": "20% 0",
          "label": "Top left"
        },
        {
          "value": "top center",
          "label": "Top center"
        },
        {
          "value": "80% 0",
          "label": "Top right"
        },
        {
          "value": "20% 50%",
          "label": "Left"
        },
        {
          "value": "center center",
          "label": "Center"
        },
        {
          "value": "80% 50%",
          "label": "Right"
        },
        {
          "value": "20% 100%",
          "label": "Bottom left"
        },
        {
          "value": "bottom center",
          "label": "Bottom center"
        },
        {
          "value": "80% 100%",
          "label": "Bottom right"
        }
      ]
    },
    {
      "type": "header",
      "content": "📱 Mobile"
    },
    {
      "type": "image_picker",
      "id": "mobile_background_image",
      "label": "Mobile image"
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text position",
      "default": "left center",
      "options": [
        {
          "value": "left top",
          "label": "Top left"
        },
        {
          "value": "center top",
          "label": "Top center"
        },
        {
          "value": "right top",
          "label": "Top right"
        },
        {
          "value": "left center",
          "label": "Left"
        },
        {
          "value": "center center",
          "label": "Center"
        },
        {
          "value": "right center",
          "label": "Right"
        },
        {
          "value": "left bottom",
          "label": "Bottom left"
        },
        {
          "value": "center bottom",
          "label": "Bottom center"
        },
        {
          "value": "right bottom",
          "label": "Bottom right"
        }
      ]
    },
    {
      "type": "range",
      "id": "text_width",
      "label": "Text box width",
      "min": 400,
      "max": 1000,
      "step": 10,
      "default": 600,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🎨 Design"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#25383C"
    },
    {
      "type": "color_background",
      "id": "text_background_color",
      "label": "Text background",
      "default": "linear-gradient(310deg, rgba(130, 176, 186, 0.4) 45%, rgba(255, 250, 99, 0.4) 85%)"
    },
    {
      "type": "color_background",
      "id": "image_overlay_color",
      "label": "Image overlay"
    },
    {
      "type": "color",
      "id": "box_color_1",
      "label": "Box one",
      "default": "#82B0BA"
    },
    {
      "type": "color",
      "id": "box_color_2",
      "label": "Box two",
      "default": "#25383C"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Box three",
      "default": "#FFFFFF"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "default": "none",
      "options": [
        {
          "value": "fade-in",
          "label": "Fade-in"
        },
        {
          "value": "fade-in-left",
          "label": "Fade-in left"
        },
        {
          "value": "fade-in-right",
          "label": "Fade-in right"
        },
        {
          "value": "fade-in-up",
          "label": "Fade-in up"
        },
        {
          "value": "fade-in-down",
          "label": "Fade-in down"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint. Prevents inner content from moving too far to the edge on large screens."
    },
    {
      "type": "range",
      "id": "outer_margin_top",
      "label": "Outer margin - top",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin_bottom",
      "label": "Outer margin - bottom",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "small_text",
      "name": "Small text",
      "settings": [
        {
          "type": "richtext",
          "id": "title",
          "label": "Small text",
          "default": "<p>New arrivals</p>"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Attention-grabbing headline"
        }
      ]
    },
    {
      "type": "text",
      "name": "Regular text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>This simple banner image is just what you need. Add custom images for mobile.</p>"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "Buttons",
      "settings": [
        {
          "type": "range",
          "id": "button_radius",
          "label": "Button border radius",
          "min": 0,
          "max": 50,
          "step": 5,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "text",
          "id": "button_label_primary",
          "label": "Primary button",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link_primary",
          "label": "Primary link"
        },
        {
          "type": "color",
          "id": "button_label_color_primary",
          "label": "Primary button label",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "button_background_color_primary",
          "label": "Primary button background",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "text",
          "id": "button_label_secondary",
          "label": "Secondary button",
          "default": "Shop now"
        },
        {
          "type": "url",
          "id": "link_secondary",
          "label": "Secondary link"
        },
        {
          "type": "color",
          "id": "button_label_color_secondary",
          "label": "Secondary button label",
          "default": "#283144"
        },
        {
          "type": "color",
          "id": "button_background_color_secondary",
          "label": "Secondary button background",
          "default": "#FAFAFA"
        }
      ]
    },
    {
      "type": "divider",
      "name": "Divider",
      "settings": [
        {
          "type": "select",
          "id": "alignment",
          "label": "Alignment",
          "default": "left",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            }
          ]
        },
        {
          "type": "range",
          "id": "base_width",
          "label": "Width",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 50,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "thickness",
          "label": "Thickness",
          "min": 0,
          "max": 10,
          "default": 1,
          "unit": "px"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "solid",
          "options": [
            {
              "value": "solid",
              "label": "Solid line"
            },
            {
              "value": "dotted",
              "label": "Dotted line"
            },
            {
              "value": "dashed",
              "label": "Dashed line"
            },
            {
              "value": "double",
              "label": "Double line"
            }
          ]
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "color",
          "id": "divider_color",
          "label": "Color",
          "default": "#FFFFFF"
        },
        {
          "type": "header",
          "content": "🖼 Layout"
        },
        {
          "type": "range",
          "id": "padding_top",
          "label": "Padding - top",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "label": "Padding - bottom",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Banner image - boxy 🎒",
      "settings": {
      },
      "blocks": [
        {
          "type": "small_text"
        },
        {
          "type": "heading"
        },
        {
          "type": "text"
        },
        {
          "type": "buttons"
        }
      ]
    }
  ]
}
{% endschema %}

  {%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }}
  }
</script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    load: function(section){

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
