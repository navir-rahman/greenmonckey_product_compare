{%- comment -%}
{
  "pack_name": "Comparison chart - columns",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: check text position {%- endcomment -%}
{% comment %} {%- assign horizontal_text_position = section.settings.text_position | split: ' ' | first -%} {% endcomment %}
{% comment %} {%- assign vertical_text_position = section.settings.text_position | split: ' ' | last -%} {% endcomment %}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

#DP--{{ section.id }} {
  background: {{ section.settings.background_color }};
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  width: {{ section.settings.base_width }}%;
  margin: auto;
  max-width: {{ max_width }};
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
}

#DP--{{ section.id }} .dsgn-pck__background {
  width: 100%;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper::before {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1;
  background: {{ section.settings.image_overlay_color }};
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper img {
  object-position: {{ section.settings.focal_point }};
}

#DP--{{ section.id }} .dsgn-pck__grid {
  height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__placeholder {
  background-color: {{ section.settings.background_color | color_darken: 10 }};
  fill: {{ section.settings.background_color | color_lighten: 10 }};
}

#DP--{{ section.id }} .dsgn-pck__content {
  z-index: 2;
  height: 100%;
  grid-template-columns: 1fr;
  grid-area: 1 / 1 / 2 / 2;
}

#DP--{{ section.id }} .dsgn-pck__block {
  color: {{ section.settings.text_color }};
  display: grid;
  {% if section.settings.columns > 3 %}
    grid-template-columns: repeat({{ section.settings.columns }}, minmax(150px,1fr));
  {% else %}
  grid-template-columns: repeat({{ section.settings.columns }}, minmax(200px,1fr));
  {% endif %}
  grid-gap: {{ section.settings.grid_gap }}px;
}

{% comment %} Block styling {% endcomment %}
#DP--{{ section.id }} .dsgn-pck__rte p,
#DP--{{ section.id }} .dsgn-pck__rte ul {
  line-height: calc(3px + 2.5ex + 3px);
  color: {{ section.settings.text_color }};
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__small-text p,
#DP--{{ section.id }} .dsgn-pck__small-text ul {
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.008 }});
}

{%- if section.settings.text_alignment == 'center' -%}
  #DP--{{ section.id }} .dsgn-pck__rte ul {
    display: table;
    margin: 0 auto;
    text-align: left;
  }
{%- elsif section.settings.text_alignment == 'right' -%}
  #DP--{{ section.id }} .dsgn-pck__rte ul {
    display: table;
    margin-left: auto;
    text-align: left;
  }
{%- endif -%}

#DP--{{ section.id }} .dsgn-pck__block {
  color: {{ section.settings.text_color }};
}

#DP--{{ section.id }} .dsgn-pck__block + .dsgn-pck__block {
  margin-top: 15px;
}
{% comment %} End block styling {% endcomment %}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phone to portrait tablet */
@media (max-width: 767px) {
  #DP--{{ section.id }} .dsgn-pck__content {
    overflow-x: scroll;
  }
}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    width: 100%;
  }

  #DP--{{ section.id }} .dsgn-pck__block {
    grid-gap: {{ section.settings.grid_gap | times: 0.75 | round: 0 }}px;
    grid-template-columns: repeat({{ section.settings.columns }}, minmax(200px,1fr));
  }

  #DP--{{ section.id }} .dsgn-pck__content {
    overflow-x: scroll;
    margin-left: 20px;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    scroll-padding: 20px;
    padding-right: 20px;
    padding-left: 20px;
    padding-bottom: 20px;
    margin-left: 0;
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}"  class="DP--{{ section.id }} dsgn-pck__heading-simple dsgn-pck__section">
  <div class="dsgn-pck__background">
    <div class="dsgn-pck__sizer dsgn-pck__grid">
      <div class="dsgn-pck__content
                  dsgn-pck__text-alignment-{{ section.settings.text_alignment }}">
        <div class="dsgn-pck__inner-content dsgn-pck__relative">
          {%- assign columns = section.settings.columns -%}
          {%- for block in section.blocks -%}
            <div id="DP--{{ block.id }}" class="dsgn-pck__block dsgn-pck__block-id-{{ block.id }} dsgn-pck__block--{{ block.type }} dsgn-pck__block--{{ forloop.index }}" {{ block.shopify_attributes }} style="--dsgn-pck-animate: {{ forloop.index }};">
              {%- case block.type -%}
                {%- when 'spacer' -%}
                  <style>
                    #shopify-section-{{ section.id }} #DP--{{ section.id }} .dsgn-pck__block-id-{{ block.id }},
                    #shopify-section-{{ section.id }} #DP--{{ section.id }} .dsgn-pck__block-id-{{ block.id }} + .dsgn-pck__block {
                      margin-top: 0;
                    }
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__spacer {
                      height: {{ block.settings.size }}px;
                      display: block !important;
                    }
                    @media (max-width: 480px) {
                      .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__spacer {
                        height: {{ block.settings.size | times: 0.75 | round: 0 }}px;
                      }
                    }
                  </style>
                  {%- for index in (1..columns) -%}
                    <div class="dsgn-pck__spacer dsgn-pck__spacer-{{ index }} dsgn-pck__column-{{ index }}" aria-hidden="true"></div>
                  {%- endfor -%}
                {%- when 'inset_image' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper {
                      width: {{ block.settings.inset_image_size }}%;
                      display: inline-block;
                      margin: 10px auto;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper img {
                      object-fit: contain;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper svg {
                      width: 100%;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__image__wrapper path {
                      fill: {{ section.settings.text_color }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__item img {
                      width: 100%;
                      object-fit: contain;
                    }
                  </style>
                  {%- capture placeholder_image -%}
                    <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.651 12.851c-2.13 1.94-5.17 2.91-9.07 2.91-.91 0-1.87-.04-2.88-.17-.38.86-.6 1.71-.6 2.51 0 .55-.45 1-1 1s-1-.45-1-1c0-.24.01-.48.04-.72.02-.13.03-.26.06-.39.18-1.13.64-2.27 1.29-3.39 2.32-4.02 9.3-8.68 12.61-9.5-4.76-.03-12 3-13.91 6.93 0-2.89 2.3-6.42 5.46-8.38 4.54-2.82 10.47-1.14 12.06 0 .23.16.37.42.38.7.08 2.31-.25 6.62-3.44 9.5z" fill="#5C5F62"/></svg>
                  {%- endcapture -%}
                  {%- for index in (1..columns) -%}
                    {%- capture inset_image -%}inset_image_{{ index }}{%- endcapture -%}
                    {%- if block.settings[inset_image] != blank -%}
                      <div class="dsgn-pck__image__wrapper dsgn-pck__image-{{ index }} dsgn-pck__column-{{ index }}">
                        <svg viewBox="0 0 {{ block.settings[inset_image].width }} {{ block.settings[inset_image].height }}"></svg>
                        {{ block.settings[inset_image] | image_url: width: 1000 | image_tag: loading: 'lazy' }}
                      </div>
                    {%- endif -%}

                    {%- if block.settings.inset_image_1 == blank and block.settings.inset_image_2 == blank and block.settings.inset_image_3 == blank and block.settings.inset_image_4 == blank -%}
                      <picture class="dsgn-pck__image__wrapper dsgn-pck__flex dsgn-pck__justify-center">
                        {{ placeholder_image | strip }}
                      </picture>
                    {%- endif -%}
                  {%- endfor -%}

                {%- when 'divider' -%}
                  <style>
                    .dsgn-pck__block-id-{{ block.id }} {
                      padding-top: {{ block.settings.padding_top }}px;
                      padding-bottom: {{ block.settings.padding_bottom }}px;
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__divider {
                      height: 0;
                      border: none;
                      background: transparent;
                      {%- if block.settings.alignment == 'left' -%}
                        margin: 0;
                      {%- else -%}
                        margin: 0 auto;
                      {%- endif -%}
                      width: {{ block.settings.base_width }}%;
                      border-top: {{ block.settings.thickness }}px {{ block.settings.style }} {{ block.settings.divider_color }};
                    }
                  </style>
                  {%- for index in (1..columns) -%}
                    <div>
                      <hr class="dsgn-pck__divider dsgn-pck__divider-{{ index }} dsgn-pck__column-{{ index }}" aria-hidden="true">
                    </div>
                  {%- endfor -%}

                {%- when 'products' -%}
                  <style>
                    {%- assign button_alpha = block.settings.button_background_color | color_extract: 'alpha' -%}

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__small-heading {
                      color: {{ section.settings.text_color }};
                      margin: 15px 0 0;
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 25px)) * {{ section.settings.text_size | times: 0.008 }});
                      {%- if section.settings.override_theme_font != blank -%}
                        font-family: var(--heading-font);
                        font-weight: var(--heading-font-weight);
                        font-style: var(--heading-font-style);
                      {%- endif -%}
                    }

                    .dsgn-pck__block-id-{{ block.id }} p.dsgn-pck__product-price {
                      color: {{ section.settings.text_color }};
                      margin: 10px 0 0;
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                      {%- if section.settings.override_theme_font != blank -%}
                        font-family: var(--heading-font);
                        font-weight: var(--heading-font-weight);
                        font-style: var(--heading-font-style);
                      {%- endif -%}
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button {
                      width: max-content;
                      margin: 15px auto 0;
                      display: flex;
                      justify-content: center;
                      align-items: center;
                      text-align: center;
                      padding: 0.5em 1.2em;
                      border: thin solid;
                      transition: all 0.3s ease-in-out;
                      border-radius: {{ block.settings.button_radius }}px;
                      line-height: calc(3px + 2ex + 3px);
                      color: {{ block.settings.button_label_color }};
                      background: {{ block.settings.button_background_color }};
                      font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                      {%- if section.settings.override_theme_font != blank -%}
                      font-family: var(--main-font);
                      font-weight: var(--main-font-weight);
                      font-style: var(--main-font-style);
                      {%- endif -%}
                      text-decoration: none;
                      border-color: {%- if button_alpha != 0 -%}{{ block.settings.button_background_color }}{%- else -%}{{ block.settings.button_label_color }}{%- endif -%};
                      background-color: {{ block.settings.button_background_color }};
                    }

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__button:hover {
                      opacity: 1;
                      {%- if button_alpha != 0 -%}
                      background-color: {{ block.settings.button_background_color | color_darken: 10 }};
                      border-color: transparent;
                      {%- else -%}
                      background-color: {{ block.settings.button_label_color | color_modify: 'alpha', 0.1 }}
                      {%- endif -%};
                    }
                  </style>
                  {%- for index in (1..columns) -%}
                    {%- capture product_index -%}product_{{ index }}{%- endcapture -%}
                    {%- capture product_handle -%}{{ block.settings[product_index] }}{%- endcapture -%}
                    {% if all_products[product_handle] != blank %}
                      <div class="dsgn-pck__product dsgn-pck__product-{{ index }} dsgn-pck__column-{{ index }}">
                        {%- if all_products[product_handle].featured_image != blank -%}
                          <div class="dsgn-pck__image__wrapper">
                            <svg viewBox="0 0 {{ all_products[product_handle].featured_image.width }} {{ all_products[product_handle].featured_image.height }}"></svg>
                            {{ all_products[product_handle].featured_image | image_url: width: 1000 | image_tag: loading: 'lazy' }}
                            <a class="dsgn-pck__absolute-link" href="{{ all_products[product_handle].url }}">{{ all_products[product_handle].title }}</a>
                          </div>
                        {%- endif -%}
                          <h4 class="dsgn-pck__small-heading">{{ all_products[product_handle].title }}</h4>
                          <p class="dsgn-pck__product-price">{{ all_products[product_handle].price | money }}</p>
                          {%- if block.settings.button_label != blank -%}
                            <a class="dsgn-pck__button" href="{{ all_products[product_handle].url }}">{{ block.settings.button_label }}</a>
                          {%- endif -%}
                      </div>
                    {% endif %}
                    {%- if block.settings.product_1 == blank and block.settings.product_2 == blank and block.settings.product_3 == blank and block.settings.product_4 == blank -%}
                      <div class="dsgn-pck__product dsgn-pck__product-{{ index }} dsgn-pck__column-{{ index }}">
                            {%- capture product_placeholder -%}product-{{ index }}{%- endcapture -%}
                            {{ product_placeholder | placeholder_svg_tag: 'dsgn-pck__placeholder' }}
                          <h4 class="dsgn-pck__small-heading">Product {{ index }}</h4>
                          <p class="dsgn-pck__product-price">{{ '24.99' | plus: index }}</p>
                          {%- if block.settings.button_label != blank -%}
                            <a class="dsgn-pck__button" href="{{ all_products[product_handle].url }}">{{ block.settings.button_label }}</a>
                          {%- endif -%}
                      </div>
                    {%- endif -%}
                  {%- endfor -%}

                {%- when 'heading' -%}
                  <style>
                    {%- assign block_heading_alpha = block.settings.block_heading_color | color_extract: 'alpha' -%}

                    .dsgn-pck__block-id-{{ block.id }} .dsgn-pck__heading {
                      margin: 0;
                      line-height: calc(3px + 2ex + 3px);
                      {%- if block_heading_alpha != 0 -%}
                        color: {{ block.settings.block_heading_color }};
                      {%- endif -%}
                      {%- if block.settings.block_heading_size != blank -%}
                        font-size: calc({{ block.settings.block_heading_size }}px * {{ section.settings.text_size | times: 0.01 }});
                      {%- else -%}
                        font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
                      {%- endif -%}
                      {%- if section.settings.override_theme_font != blank -%}
                      font-family: var(--heading-font);
                      font-weight: var(--heading-font-weight);
                      font-style: var(--heading-font-style);
                      {%- endif -%}
                    }
                  </style>
                  {%- for index in (1..columns) -%}
                      {%- capture title -%}title_{{ index }}{%- endcapture -%}
                      {%- if block.settings[title] != blank -%}
                        <div class="dsgn-pck__heading-{{ index }} dsgn-pck__column-{{ index }}">
                          <{{- block.settings.heading_level }} class="dsgn-pck__heading">
                            {{ block.settings[title] | newline_to_br }}
                          </{{- block.settings.heading_level -}}>
                        </div>
                      {%- endif -%}
                    {%- if block.settings.title_1 == blank and block.settings.title_2 == blank and block.settings.title_3 == blank and block.settings.title_4 == blank -%}
                      <div class="dsgn-pck__heading-{{ index }} dsgn-pck__column-{{ index }}">
                        <h3 class="dsgn-pck__heading">
                          Heading {{ index }}
                        </h3>
                      </div>
                    {%- endif -%}
                  {%- endfor -%}

                {%- when 'text' -%}
                  {%- for index in (1..columns) -%}
                    {%- capture text -%}text_{{ index }}{%- endcapture -%}
                    {%- if block.settings[text] != blank -%}
                      <div class="dsgn-pck__text dsgn-pck__rte dsgn-pck__text-alignment-{{ block.settings.text_alignment }} dsgn-pck__text-{{ index }} dsgn-pck__column-{{ index }}">
                        {{ block.settings[text] }}
                      </div>
                    {%- endif -%}
                    {%- if block.settings.text_1 == blank and block.settings.text_2 == blank and block.settings.text_3 == blank and block.settings.text_4 == blank -%}
                      <div class="dsgn-pck__text dsgn-pck__rte dsgn-pck__text-alignment-{{ block.settings.text_alignment }} dsgn-pck__text-{{ index }} dsgn-pck__column-{{ index }}">
                        <p>
                          Lorem ipsum dolor, sit amet consectetur adipisicing, elit. Pariatur non atque vero, totam!
                        </p>
                      </div>
                    {%- endif -%}
                  {%- endfor -%}
              {%- endcase -%}
            </div>
          {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Comparison chart columns",
  "class": "DP__comparison-columns",
  "settings": [
    {
      "type": "range",
      "id": "columns",
      "label": "Columns",
      "default": 3,
      "min": 2,
      "max": 4
    },
    {
      "type": "range",
      "id": "grid_gap",
      "label": "Spacing gap",
      "min": 10,
      "max": 150,
      "step": 5,
      "default": 100
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 90,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "center",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "header",
      "content": "🎨 Design"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#2F2E30"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background",
      "default": "#f1f1f1"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "default": "none",
      "options": [
        {
          "value": "fade-in",
          "label": "Fade-in"
        },
        {
          "value": "fade-in-left",
          "label": "Fade-in left"
        },
        {
          "value": "fade-in-right",
          "label": "Fade-in right"
        },
        {
          "value": "fade-in-up",
          "label": "Fade-in up"
        },
        {
          "value": "fade-in-down",
          "label": "Fade-in down"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 60,
      "max": 100,
      "step": 5,
      "default": 95,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px"
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 40,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    }
  ],
  "blocks": [
    {
      "type": "products",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3"
        },
        {
          "type": "product",
          "id": "product_4",
          "label": "Product 4"
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "range",
          "id": "button_radius",
          "label": "Button border radius",
          "min": 0,
          "max": 50,
          "step": 5,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "color",
          "id": "button_label_color",
          "label": "Button label",
          "default": "#121212"
        },
        {
          "type": "color",
          "id": "button_background_color",
          "label": "Button background",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button label",
          "default": "Buy Now"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "title_1",
          "label": "Heading 1"
        },
        {
          "type": "text",
          "id": "title_2",
          "label": "Heading 2"
        },
        {
          "type": "text",
          "id": "title_3",
          "label": "Heading 3"
        },
        {
          "type": "text",
          "id": "title_4",
          "label": "Heading 4"
        },
        {
          "type": "header",
          "content": "🚨 Advanced"
        },
        {
          "type": "color",
          "id": "block_heading_color",
          "label": "Heading color"
        },
        {
          "type": "select",
          "id": "heading_level",
          "label": "Heading level",
          "options": [
            {
              "value": "h1",
              "label": "h1"
            },
            {
              "value": "h2",
              "label": "h2"
            },
            {
              "value": "h3",
              "label": "h3"
            },
            {
              "value": "h4",
              "label": "h4"
            },
            {
              "value": "h5",
              "label": "h5"
            },
            {
              "value": "h6",
              "label": "h6"
            }
          ],
          "default": "h2",
          "info": "The most important heading has the rank 1 (<h1>) and the least important heading has rank 6 (<h6>). Only use one h1 on a page."
        },
        {
          "type": "text",
          "id": "block_heading_size",
          "label": "Base text size",
          "info": "Set custom base size for heading. Leave empty to default to base size of 35px. Base size is affected by section text size setting."
        }
      ]
    },
    {
      "type": "text",
      "name": "Regular text",
      "settings": [
        {
          "type": "richtext",
          "id": "text_1",
          "label": "Text 1"
        },
        {
          "type": "richtext",
          "id": "text_2",
          "label": "Text 2"
        },
        {
          "type": "richtext",
          "id": "text_3",
          "label": "Text 3"
        },
        {
          "type": "richtext",
          "id": "text_4",
          "label": "Text 4"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "label": "Text alignment",
          "default": "center",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ]
        }
      ]
    },
    {
      "type": "inset_image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "inset_image_1",
          "label": "Image"
        },
        {
          "type": "image_picker",
          "id": "inset_image_2",
          "label": "Image"
        },
        {
          "type": "image_picker",
          "id": "inset_image_3",
          "label": "Image"
        },
        {
          "type": "image_picker",
          "id": "inset_image_4",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "inset_image_size",
          "label": "Image size",
          "default": 30,
          "min": 5,
          "max": 100,
          "step": 5,
          "unit": "%"
        }
      ]
    },
    {
      "type": "spacer",
      "name": "Spacer",
      "settings": [
        {
          "type": "range",
          "id": "size",
          "label": "Spacing height",
          "min": 0,
          "max": 100,
          "default": 15,
          "unit": "px"
        }
      ]
    },
    {
      "type": "divider",
      "name": "Divider",
      "settings": [
        {
          "type": "select",
          "id": "alignment",
          "label": "Alignment",
          "default": "center",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            }
          ]
        },
        {
          "type": "range",
          "id": "base_width",
          "label": "Width",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 50,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "thickness",
          "label": "Thickness",
          "min": 0,
          "max": 10,
          "default": 1,
          "unit": "px"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "solid",
          "options": [
            {
              "value": "solid",
              "label": "Solid line"
            },
            {
              "value": "dotted",
              "label": "Dotted line"
            },
            {
              "value": "dashed",
              "label": "Dashed line"
            },
            {
              "value": "double",
              "label": "Double line"
            }
          ]
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "color",
          "id": "divider_color",
          "label": "Color",
          "default": "#121212"
        },
        {
          "type": "header",
          "content": "🖼 Layout"
        },
        {
          "type": "range",
          "id": "padding_top",
          "label": "Padding - top",
          "min": 0,
          "max": 100,
          "default": 10,
          "step": 5,
          "unit": "px"
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "label": "Padding - bottom",
          "min": 0,
          "max": 100,
          "default": 10,
          "step": 5,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Comparison chart - columns 🎒",
      "settings": {
      },
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "products"
        }
      ]
    }
  ]
}
{% endschema %}

  {%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }}
  }
</script>
{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    load: function(section){

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
