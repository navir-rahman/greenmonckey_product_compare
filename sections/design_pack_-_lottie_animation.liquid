{%- comment -%}
{
  "pack_name": "Lottie animation",
  "pack_author": "Design Packs"
}
{%- endcomment -%}

{% comment %} Security Code - hides section when app uninstalled {% endcomment %}
{%- unless content_for_header contains 'design_packs_file.js' -%}
  {%- if request.design_mode -%}
    <div class="dsgn-pck__no-app-warning">
      <div class="dsgn-pck__no-app-warning-background">
      </div>
      <div class="dsgn-pck__no-app-warning-text dsgn-pck__rte">
        <p><strong>WARNING!</strong> This premium section will not display properly without an active subscription for <a href="https://apps.shopify.com/design-packs" target="_blank" rel="nofollow">Design Packs</a>. If you need any support please email <a href="mailto:info@design-packs.com" target="_blank">info@design-packs.com</a> with your questions.</p>
      </div>
    </div>
  {%- endif -%}
  {%- break -%}
{%- endunless -%}

{% comment %} Images: responsive image widths {% endcomment %}
{%- assign widths = '180, 360, 540, 720, 900, 1080, 1296, 1512, 1728, 1950, 2100, 2260, 2450, 2700, 3000, 3350, 3750, 4100' -%}

{%- comment -%} Layout: has user entered measurement value into max-width field? {%- endcomment -%}
{%- if section.settings.max_width contains 'px' or section.settings.max_width contains '%' -%}
  {%- assign max_width = section.settings.max_width -%}
{%- else -%}
  {%- assign max_width = section.settings.max_width | append: 'px' -%}
{%- endif -%}

{%- comment -%} Text: custom font_picker values {%- endcomment -%}
{%- capture font_settings_list -%}
{{ section.settings.main_font | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.main_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_face: font_display: 'swap' }}~
{{ section.settings.heading_font | font_modify: 'style', 'italic' | font_modify: 'weight', 'bolder' | font_face: font_display: 'swap' }}
{%- endcapture -%}
{%- assign font_array = font_settings_list | split: '~' -%}

{%- capture minify -%}
{%- comment -%} CSS {%- endcomment -%}
<style>
{%- if section.settings.override_theme_font != blank -%}
  {%- for font in font_array -%}
    {%- unless font contains 'error' -%}{{ font }}{%- endunless -%}
  {%- endfor -%}
  #DP--{{ section.id }} {
    --main-font: {{ section.settings.main_font.family }}, {{ section.settings.main_font.fallback_families }};
    --main-font-weight: {{ section.settings.main_font.weight }};
    --main-font-style: {{ section.settings.main_font.style }};
    --heading-font: {{ section.settings.heading_font.family }}, {{ section.settings.heading_font.fallback_families }};
    --heading-font-weight: {{ section.settings.heading_font.weight }};
    --heading-font-style: {{ section.settings.heading_font.style }};
  }
{%- endif -%}

:host > * {
  border: solid red 2px;
  fill: transparent !important;
}

#DP--{{ section.id }} {
  overflow-x: hidden;
  margin-top: {{ section.settings.outer_margin }}px;
  margin-bottom: {{ section.settings.outer_margin }}px;
}

#DP--{{ section.id }} .dsgn-pck__sizer {
  padding-top: {{ section.settings.inner_padding }}px;
  padding-bottom: {{ section.settings.inner_padding }}px;
  width: {{ section.settings.base_width }}%;
  max-width: {{ max_width }};
}

#DP--{{ section.id }} .dsgn-pck__background {
  background: {{ section.settings.background_color }};
}

#DP--{{ section.id }} .dsgn-pck__grid {
  display: grid;
  grid-template-columns: repeat(2, minmax(250px, 1fr));
}

#DP--{{ section.id }} .dsgn-pck__text p:last-of-type {
  margin-bottom: 1.2rem;
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper img {
  object-position: {{ section.settings.focal_point }};
}

#DP--{{ section.id }} .dsgn-pck__image__wrapper {
    max-width: {{ section.settings.lottie_max_width }}%;
    margin: 0 auto;
    align-content: center;
    height: 100%;
}

#DP--{{ section.id }} .dsgn-pck__content {
  padding: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
  color: {{ section.settings.text_color }};
  background: {{ section.settings.text_background_color }};
}

#DP--{{ section.id }} .dsgn-pck__inner-content {
  width: min(400px, 80%);
  margin: auto;
}

#DP--{{ section.id }} .dsgn-pck__heading {
  line-height: calc(3px + 2ex + 3px);
  font-size: calc(var(--dp-g-heading-size, var(--dp-heading-size, 35px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--heading-font);
  font-weight: var(--heading-font-weight);
  font-style: var(--heading-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__heading + .dsgn-pck__text {
  margin-top: calc(10px * {{ section.settings.text_size | times: 0.015 }});
}

#DP--{{ section.id }} .dsgn-pck__text p {
  line-height: calc(3px + 3ex + 3px);
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__text + .dsgn-pck__button {
  margin-top: calc(10px * {{ section.settings.text_size | times: 0.02 }});
}

#DP--{{ section.id }} .dsgn-pck__button {
  margin-top: 1.2em;
  border-color: transparent;
  display: inline-block;
  text-decoration: none;
  padding: 0.5em 1.2em;
  transition: all 0.3s ease-in-out;
  border: thin solid;
  border-radius: {{ section.settings.button_radius }}px;
  border-color: {%- if button_alpha != 0 -%}{{ section.settings.button_background_color }}{%- else -%}{{ section.settings.button_label_color }}{%- endif -%};
  font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
  color: {{ section.settings.button_label_color }};
  background-color: {{ section.settings.button_background_color }};
  {%- if section.settings.override_theme_font != blank -%}
  font-family: var(--main-font);
  font-weight: var(--main-font-weight);
  font-style: var(--main-font-style);
  {%- endif -%}
}

#DP--{{ section.id }} .dsgn-pck__button:hover {
  opacity: 1;
  {%- if button_alpha != 0 -%}
  background-color: {{ section.settings.button_background_color | color_darken: 10 }};
  border-color: transparent;
  {%- else -%}
  background-color: {{ section.settings.button_label_color | color_modify: 'alpha', 0.1 }}
  {%- endif -%};
}

#DP--{{ section.id }} .dsgn-pck__button::after {
  display: none;
}

/* Animation */
{%- if section.settings.animation != 'none' -%}
  #DP--{{ section.id }}.dsgn-pck__animation-applied [style*="--dsgn-pck-animate"] {
    animation-name: dsgn-pck__animation--{{ section.settings.animation }};
  }
{%- else -%}
  #DP--{{ section.id }} [style*="--dsgn-pck-animate"] {
    opacity: 1;
  }
{% endif %}

{%- if section.settings.custom_css != blank -%}
  {%- assign custom_section_declarations = section.settings.custom_css | split: '}' -%}
  {%- for declaration in custom_section_declarations -%}
    {%- if declaration contains '{' -%}
      #DP--{{ section.id }} {{ declaration }} }
    {%- endif -%}
  {%- endfor -%}
{%- endif -%}

/* Landscape phones and down */
@media (max-width: 480px) {
  #DP--{{ section.id }} {
    margin-top: {{ section.settings.outer_margin | divided_by: 2 }}px;
    margin-bottom: {{ section.settings.outer_margin | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__sizer {
    padding-top: {{ section.settings.inner_padding | divided_by: 2 }}px;
    padding-bottom: {{ section.settings.inner_padding | divided_by: 2 }}px;
  }

  #DP--{{ section.id }} .dsgn-pck__grid {
    grid-template-columns: repeat(1, minmax(250px, 1fr));
  }

  #DP--{{ section.id }} div.dsgn-pck__button-area {
    grid-template-columns: 1fr;
    width: 100%;
    gap: 10px;
  }

  #DP--{{ section.id }} .dsgn-pck__image__wrapper {
    max-width: max(100px, {{ section.settings.lottie_max_width }}%);
  }

  {%- if section.settings.mobile_custom_css != blank -%}
    {%- assign mobile_custom_declarations = section.settings.mobile_custom_css | split: '}' -%}
    {%- for declaration in mobile_custom_declarations -%}
      {%- if declaration contains '{' -%}
        #DP--{{ section.id }} {{ declaration }} }
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
}
</style>

{%- comment -%} HTML {%- endcomment -%}
<section id="DP--{{ section.id }}" class="DP--{{ section.id }} dsgn-pck__lottie-animation dsgn-pck__section">
  <div class="dsgn-pck__background">
    <div class="dsgn-pck__sizer
                dsgn-pck__grid
                {% if section.settings.image_position == 'right' -%}
                  dsgn-pck__grid-reverse
                {%- endif -%}">
      <div class="dsgn-pck__image">
        <div class="dsgn-pck__image__wrapper">
          <svg viewBox="0 0 1000 1000"></svg>
          {%- if section.settings.lottie_url != blank -%}
            <lottie-player
              background="transparent"
              speed="1"
              id="lottie_{{ section.id }}"
              autoplay
              loop
              mode="normal"
              src="{{ section.settings.lottie_url }}"
            >
            </lottie-player>
          {%- endif -%}
        </div>
      </div>
      <div class="dsgn-pck__content dsgn-pck__flex dsgn-pck__justify-{{ section.settings.text_alignment }}" style="--dsgn-pck-animate: 1;">
        <div class="dsgn-pck__inner-content">
          {%- for block in section.blocks -%}
              <div id="DP--{{ block.id }}" class="dsgn-pck__block dsgn-pck__block--{{ block.type }}" {{ block.shopify_attributes }} style="--dsgn-pck-animate: {{ forloop.index }};">
                {%- case block.type -%}
                  {%- when 'inset_image' -%}
                    <style>
                      #DP--{{ block.id }} .dsgn-pck__image__wrapper {
                        width: {{ block.settings.inset_image_size }}%;
                        display: inline-block;
                        margin: 10px 0;
                      }

                      #DP--{{ block.id }} .dsgn-pck__image__wrapper svg {
                        width: 100%;
                      }

                      #DP--{{ block.id }} .dsgn-pck__image__wrapper path {
                        fill: {{ section.settings.text_color }};
                      }


                      #DP--{{ block.id }} .dsgn-pck__item img {
                        width: 100%;
                        object-fit: contain;
                      }
                    </style>
                    {%- capture placeholder_image -%}
                    <svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M15.651 12.851c-2.13 1.94-5.17 2.91-9.07 2.91-.91 0-1.87-.04-2.88-.17-.38.86-.6 1.71-.6 2.51 0 .55-.45 1-1 1s-1-.45-1-1c0-.24.01-.48.04-.72.02-.13.03-.26.06-.39.18-1.13.64-2.27 1.29-3.39 2.32-4.02 9.3-8.68 12.61-9.5-4.76-.03-12 3-13.91 6.93 0-2.89 2.3-6.42 5.46-8.38 4.54-2.82 10.47-1.14 12.06 0 .23.16.37.42.38.7.08 2.31-.25 6.62-3.44 9.5z" fill="#5C5F62"/></svg>
                  {%- endcapture -%}
                    {%- if block.settings.inset_image != blank -%}
                      <picture class="dsgn-pck__image__wrapper">
                        <svg viewBox="0 0 {{ block.settings.inset_image.width }} {{ block.settings.inset_image.height }}"></svg>
                        {{ block.settings.inset_image | image_url: width: 1000 | image_tag: loading: 'lazy' }}
                      </picture>
                    {%- else -%}
                      <picture class="dsgn-pck__image__wrapper dsgn-pck__flex dsgn-pck__justify-center">
                        {{ placeholder_image | strip }}
                      </picture>
                    {%- endif -%}
                  {%- when 'divider' -%}
                    <style>
                      #DP--{{ block.id }} {
                        padding-top: {{ block.settings.padding_top }}px;
                        padding-bottom: {{ block.settings.padding_bottom }}px;
                      }

                      #DP--{{ block.id }} .dsgn-pck__divider {
                        height: 0;
                        border: none;
                        background: transparent;
                        {%- if block.settings.alignment == 'left' -%}
                          margin: 0;
                        {%- elsif block.settings.alignment == 'right' -%}
                          margin: 0 0 0 auto;
                        {%- else -%}
                          margin: 0 auto;
                        {%- endif -%}
                        width: {{ block.settings.base_width }}%;
                        border-top: {{ block.settings.thickness }}px {{ block.settings.style }} {{ block.settings.divider_color }};
                      }
                    </style>
                    <hr class="dsgn-pck__divider" aria-hidden="true">

                  {%- when 'small_text' -%}
                    {%- if block.settings.small_text != blank -%}
                      <div class="dsgn-pck__small-text dsgn-pck__rte">
                        {{ block.settings.small_text }}
                      </div>
                    {%- endif -%}
                  {%- when 'heading' -%}
                    {%- if block.settings.title != blank -%}
                      <h2 class="dsgn-pck__heading">
                        {{ block.settings.title | newline_to_br }}
                      </h2>
                    {%- endif -%}
                  {%- when 'text' -%}
                    {%- if block.settings.text != blank -%}
                      <div class="dsgn-pck__text dsgn-pck__rte">
                        {{ block.settings.text }}
                      </div>
                    {%- endif -%}
                  {%- when 'buttons' -%}
                    <style>
                      {%- assign button_alpha_primary = block.settings.button_background_color_primary | color_extract: 'alpha' -%}
                      {%- assign button_alpha_secondary = block.settings.button_background_color_secondary | color_extract: 'alpha' -%}

                      #DP--{{ section.id }} .dsgn-pck__button-area {
                        display: grid;
                        grid-gap: 1.3em;
                        {%- if section.settings.text_alignment == 'center' -%}
                          margin: 0 auto;
                        {%- elsif section.settings.text_alignment == 'right' -%}
                          margin: 0 0 0 auto;
                        {%- else -%}
                        {%- endif -%}
                        margin-bottom: 1.2rem;
                        {%- if block.settings.button_label_primary != blank and block.settings.button_label_secondary != blank -%}
                          grid-template-columns: repeat(2, 1fr);
                        {%- else -%}
                          grid-template-columns: 1fr;
                          max-width: 200px;
                        {%- endif -%}
                        max-width: 100%;
                        width: fit-content;
                      }

                      #DP--{{ section.id }} .dsgn-pck__button {
                        display: flex;
                        justify-content: center;
                        align-items: center;
                        text-align: center;
                        text-decoration: none;
                        padding: 0.5em 1.2em;
                        margin-top: 0;
                        border: thin solid;
                        transition: all 0.3s ease-in-out;
                        border-radius: {{ block.settings.button_radius }}px;
                        line-height: calc(3px + 2ex + 3px);
                        font-size: calc(var(--dp-g-body-size, var(--dp-body-size, 18px)) * {{ section.settings.text_size | times: 0.01 }});
                        {%- if section.settings.override_theme_font != blank -%}
                        font-family: var(--main-font);
                        font-weight: var(--main-font-weight);
                        font-style: var(--main-font-style);
                        {%- endif -%}
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-primary {
                        color: {{ block.settings.button_label_color_primary }};
                        border-color: {%- if button_alpha_primary != 0 -%}{{ block.settings.button_background_color_primary }}{%- else -%}{{ block.settings.button_label_color_primary }}{%- endif -%};
                        background-color: {{ block.settings.button_background_color_primary }};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-secondary {
                        color: {{ block.settings.button_label_color_secondary }};
                        border-color: {%- if button_alpha_secondary != 0 -%}{{ block.settings.button_background_color_secondary }}{%- else -%}{{ block.settings.button_label_color_secondary }}{%- endif -%};
                        background-color: {{ block.settings.button_background_color_secondary }};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-primary:hover {
                        opacity: 1;
                        {%- if button_alpha_primary != 0 -%}
                        background-color: {{ block.settings.button_background_color_primary | color_darken: 10 }};
                        border-color: transparent;
                        {%- else -%}
                        background-color: {{ block.settings.button_label_color_primary | color_modify: 'alpha', 0.1 }}
                        {%- endif -%};
                      }

                      #DP--{{ section.id }} .dsgn-pck__button-secondary:hover {
                        opacity: 1;
                        {%- if button_alpha_secondary != 0 -%}
                        background-color: {{ block.settings.button_background_color_secondary | color_darken: 10 }};
                        border-color: transparent;
                        {%- else -%}
                        background-color: {{ block.settings.button_label_color_secondary | color_modify: 'alpha', 0.1 }}
                        {%- endif -%};
                      }
                    </style>
                    <div class="dsgn-pck__button-area">
                      {%- if block.settings.button_label_primary != blank -%}
                        <a class="dsgn-pck__button dsgn-pck__button-primary" {%- if block.settings.link_primary != blank -%} href="{{ block.settings.link_primary }}" {%- endif -%}>{{ block.settings.button_label_primary }}</a>
                      {%- endif -%}
                      {%- if block.settings.button_label_secondary != blank -%}
                        <a class="dsgn-pck__button dsgn-pck__button-secondary" {%- if block.settings.link_secondary != blank -%}href="{{ block.settings.link_secondary }}"{%- endif -%}>{{ block.settings.button_label_secondary }}</a>
                      {%- endif -%}
                    </div>
                {%- endcase -%}
              </div>
            {%- endfor -%}
        </div>
      </div>
    </div>
  </div>
</section>
{%- endcapture -%}
{{ minify | strip_newlines }}

{% schema %}
{
  "name": "Lottie animation",
  "class": "DP__lottie-animation",
  "settings": [
    {
      "type": "paragraph",
      "content": "Add some movement to your site using a Lottie animation. Find free animations on [lottiefiles.com](https://lottiefiles.com/)"
    },
    {
      "type": "text",
      "id": "lottie_url",
      "label": "Lottie url",
      "info": "Copy and paste link to json file",
      "default": "https://assets5.lottiefiles.com/packages/lf20_szakeiw5.json"
    },
    {
      "type": "range",
      "id": "lottie_max_width",
      "min": 20,
      "max": 100,
      "unit": "%",
      "label": "Lottie size",
      "default": 100
    },
    {
      "type": "select",
      "id": "image_position",
      "label": "Lottie position",
      "default": "right",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ]
    },
    {
      "type": "select",
      "id": "animation_trigger",
      "label": "Lottie animation trigger",
      "default": "on_scroll",
      "options": [
        {
          "value": "on_scroll",
          "label": "On scroll"
        },
        {
          "value": "on_hover",
          "label": "On hover"
        },
        {
          "value": "animate_with_scroll",
          "label": "Match frames with scroll"
        }
      ]
    },
    {
      "type": "header",
      "content": "✏️ Text appearance"
    },
    {
      "type": "range",
      "id": "text_size",
      "label": "Text size",
      "min": 80,
      "max": 150,
      "step": 5,
      "default": 90,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "default": "left",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        },
        {
          "value": "justify",
          "label": "Justify"
        }
      ]
    },
    {
      "type": "header",
      "content": "🎨 Design"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#283144"
    },
    {
      "type": "color_background",
      "id": "text_background_color",
      "label": "Text background",
      "default": "linear-gradient(0deg, rgba(255, 255, 255, 1), rgba(255, 255, 255, 1) 100%)"
    },
    {
      "type": "color_background",
      "id": "background_color",
      "label": "Background"
    },
    {
      "type": "select",
      "id": "animation",
      "label": "Animation",
      "default": "none",
      "options": [
        {
          "value": "fade-in",
          "label": "Fade-in"
        },
        {
          "value": "fade-in-left",
          "label": "Fade-in left"
        },
        {
          "value": "fade-in-right",
          "label": "Fade-in right"
        },
        {
          "value": "fade-in-up",
          "label": "Fade-in up"
        },
        {
          "value": "fade-in-down",
          "label": "Fade-in down"
        },
        {
          "value": "none",
          "label": "None"
        }
      ]
    },
    {
      "type": "header",
      "content": "🖼 Layout"
    },
    {
      "type": "range",
      "id": "base_width",
      "label": "Size",
      "min": 60,
      "max": 100,
      "step": 5,
      "default": 100,
      "unit": "%"
    },
    {
      "type": "text",
      "id": "max_width",
      "label": "Maximum width",
      "placeholder": "eg. 1200px",
      "info": "Sets width constraint for content."
    },
    {
      "type": "range",
      "id": "inner_padding",
      "label": "Inner padding",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 60,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "outer_margin",
      "label": "Outer margin",
      "info": "Only applies to top and bottom.",
      "min": 0,
      "max": 100,
      "default": 0,
      "step": 5,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "🚨 Advanced"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "CSS"
    },
    {
      "type": "html",
      "id": "mobile_custom_css",
      "label": "Mobile CSS",
      "info": "Applied on screens less than 480px."
    },
    {
      "type": "checkbox",
      "id": "override_theme_font",
      "label": "Override default theme font",
      "default": false
    },
    {
      "type": "font_picker",
      "id": "heading_font",
      "label": "Heading",
      "default": "serif"
    },
    {
      "type": "font_picker",
      "id": "main_font",
      "label": "Text",
      "default": "sans-serif"
    }
  ],
  "blocks": [
    {
      "type": "small_text",
      "name": "Small text",
      "settings": [
        {
          "type": "richtext",
          "id": "small_text",
          "label": "Small text",
          "default": "<p>New arrivals</p>"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Lottie animation"
        }
      ]
    },
    {
      "type": "text",
      "name": "Regular text",
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "label": "Text",
          "default": "<p>Add some movement and interest to your storefront.</p>"
        }
      ]
    },
    {
      "type": "inset_image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "inset_image",
          "label": "Image"
        },
        {
          "type": "range",
          "id": "inset_image_size",
          "label": "Image size",
          "default": 10,
          "min": 5,
          "max": 100,
          "step": 5,
          "unit": "%"
        }
      ]
    },
    {
      "type": "buttons",
      "name": "Buttons",
      "settings": [
        {
          "type": "range",
          "id": "button_radius",
          "label": "Button border radius",
          "min": 0,
          "max": 50,
          "step": 5,
          "default": 0,
          "unit": "px"
        },
        {
          "type": "text",
          "id": "button_label_primary",
          "label": "Primary button",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link_primary",
          "label": "Primary link"
        },
        {
          "type": "color",
          "id": "button_label_color_primary",
          "label": "Primary button label",
          "default": "#121212"
        },
        {
          "type": "color",
          "id": "button_background_color_primary",
          "label": "Primary button background",
          "default": "rgba(0,0,0,0)"
        },
        {
          "type": "text",
          "id": "button_label_secondary",
          "label": "Secondary button",
          "default": "Shop now"
        },
        {
          "type": "url",
          "id": "link_secondary",
          "label": "Secondary link"
        },
        {
          "type": "color",
          "id": "button_label_color_secondary",
          "label": "Secondary button label",
          "default": "#FFFFFF"
        },
        {
          "type": "color",
          "id": "button_background_color_secondary",
          "label": "Secondary button background",
          "default": "#121212"
        }
      ]
    },
    {
      "type": "divider",
      "name": "Divider",
      "settings": [
        {
          "type": "select",
          "id": "alignment",
          "label": "Alignment",
          "default": "left",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ]
        },
        {
          "type": "range",
          "id": "base_width",
          "label": "Width",
          "min": 20,
          "max": 100,
          "step": 5,
          "default": 50,
          "unit": "%"
        },
        {
          "type": "range",
          "id": "thickness",
          "label": "Thickness",
          "min": 0,
          "max": 10,
          "default": 1,
          "unit": "px"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "default": "solid",
          "options": [
            {
              "value": "solid",
              "label": "Solid line"
            },
            {
              "value": "dotted",
              "label": "Dotted line"
            },
            {
              "value": "dashed",
              "label": "Dashed line"
            },
            {
              "value": "double",
              "label": "Double line"
            }
          ]
        },
        {
          "type": "header",
          "content": "🎨 Design"
        },
        {
          "type": "color",
          "id": "divider_color",
          "label": "Color",
          "default": "#FFFFFF"
        },
        {
          "type": "header",
          "content": "🖼 Layout"
        },
        {
          "type": "range",
          "id": "padding_top",
          "label": "Padding - top",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "label": "Padding - bottom",
          "min": 0,
          "max": 100,
          "default": 40,
          "step": 5,
          "unit": "px"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Lottie animation 🎒",
      "settings": {
        "text_alignment": "center"
      },
      "blocks": [
        {
          "type": "heading"
        },
        {
          "type": "text"
        }
      ]
    }
  ]
}
{% endschema %}

{%- comment -%} JSON Settings {%- endcomment -%}
<script type="application/json" data-dsgn-pck="{{ section.id }}">
  {
    "id": {{ section.id | json }},
    "animation": {{ section.settings.animation | json }},
    "lottie_url": {{ section.settings.lottie_url | json }},
    "animation_trigger": {{ section.settings.animation_trigger | json }},
    "frame_start": {{ section.settings.frame_start | json }},
    "frame_end": {{ section.settings.frame_end | json }}
  }
</script>
{%- comment -%} External scripts {%- endcomment -%}
<script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/lottie-player.js?v=1650404305" defer></script>
<script data-dsgn-pck-external-js="{{ section.id }}" src="https://cdn.shopify.com/s/files/1/0577/7673/4361/files/lottie-interactivity.min.js?v=1650402900" defer></script>

{%- comment -%} JavaScript {%- endcomment -%}
<script data-dsgn-pck-js="{{ section.id }}" type="module" defer>
(function(){

  const designPack = {
    settings: {},
    animateSection: function(entries, observer){
      // Target the first entry available.
      let observedSection = entries[0];
      if (observedSection.isIntersecting) {
        observedSection.target.classList.add('dsgn-pck__animation-applied');
      }
    },
    getOptions: function(start_frame, end_frame){
        switch(designPack.settings.animation_trigger) {
          case 'on_hover':
            return  {
              player: `#lottie_${designPack.settings.id}`,
              mode: "cursor",
              actions: [
                {
                  position: { x: [0, 1], y: [0, 1] },
                  type: "loop",
                  frames: [start_frame, end_frame]
                },
                {
                    position: { x: -1, y: -1 },
                    type: 'stop',
                    frames: [start_frame],
                }
              ]
            }
            break;
          case 'animate_with_scroll':
            return  {
              player: `#lottie_${designPack.settings.id}`,
              mode: "scroll",
              actions: [
                  {
                    visibility: [0, 1.0],
                    type: "seek",
                    frames: [parseInt(start_frame), parseInt(end_frame)],
                  }
              ]
            }
            break;
          case 'on_scroll':
            return {
              player: `#lottie_${designPack.settings.id}`,
              mode: 'scroll',
              actions: [
                {
                  visibility: [0, 1],
                  type: 'play'
                },
              ]
            }
            break;
          default:
        }
    },
    load: function(section){

      if (designPack.settings.lottie_url){
        fetch(designPack.settings.lottie_url)
        .then(res => res.json())
        .then(lottie => {
          const options = designPack.getOptions(lottie.ip, lottie.op);
          LottieInteractivity.create(options);
        })
      }

      if (this.settings.animation !== 'none'){
        const options = {
          root: null,
          rootMargin: '0px',
          threshold: [0, 0.25, 0.5, 0.75, 1]
        };
        // Construct Intersection Observer.
        const observer = new IntersectionObserver( this.animateSection, options );
        // Observe if element is present.
        if (section) {
          observer.observe(section);
        }
      }
    },
    unload: function(section){
      section.classList.remove('dsgn-pck__animation-applied')
    }
  }

  window.addEventListener('shopify:section:unload', function (e) {
    const settings = document.querySelector(`[data-dsgn-pck="${e.detail.sectionId}"]`);
    const sectionId = e.detail.sectionId;
    const section = document.querySelector(`#DP--${e.detail.sectionId}`);
    if (sectionId == designPack.settings.id){
      designPack.unload(section);
    }
  });

  designPack.settings = JSON.parse(document.querySelector('[data-dsgn-pck="{{ section.id }}"]').innerHTML);
  const sectionId = {{ section.id | json }};
  const section = document.querySelector(`#DP--${sectionId}`);

  if (sectionId == designPack.settings.id){
    designPack.load(section);
  }
})()
</script>
